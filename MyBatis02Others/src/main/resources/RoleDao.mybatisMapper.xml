<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.IRoleDao">

    <!--定义一个封装role类的resultMap标签-->
    <resultMap id="roleMapper" type="role">
        <id property="roleId" column="id"/>
        <result property="roleName" column="role_name" />
        <result property="roleDesc" column="role_description"/>
    </resultMap>

    <!--定义一个role类，左外连映射user-->
    <resultMap id="roleWithUserMapper" type="role">
        <!--account下的3个属性的映射(不写不会进行映射,最终返回结果会为null)-->
        <id property="roleId" column="id"/>
        <result property="roleName" column="role_name" />
        <result property="roleDesc" column="role_description"/>

            <!--进行一对一的关系映射-->
            <collection property="users" ofType="user">
                <id property="id" column="id"/>
                <result property="username" column="username"/>
                <result property="sex" column="sex"/>
                <result property="birthday" column="birthday"/>
                <result property="address" column="address"/>
            </collection>
    </resultMap>

    <!--定义一个user类，左外连映射role-->
    <resultMap id="userWithRoleMapper" type="user">

        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="address" column="address"/>

        <collection property="roles" ofType="role">
            <!--roleId无法正确映射到r.id,role类中注释了id属性-->
            <id property="roleId" column="mybatis_role.id"/>
            <result property="roleName" column="role_name" />
            <result property="roleDesc" column="role_description"/>
        </collection>
    </resultMap>

    <!--role类左外连user-->
    <select id="findAllRoleWithUser" resultMap="roleWithUserMapper">
            -- 可以选择换行后添加空格，避免语法拼接错误（实际并不会发生）
        SELECT u.id,u.username,r.role_name,r.role_description FROM mybatis_role r 	-- 选择只显示R的ID R_N R_D和U的name
	    LEFT OUTER JOIN mybatis_role_map_user rmu ON r.id r_id = rmu.rid	-- 左外联 加入rmu 让 r的id与rmu的rid关联
	    LEFT OUTER JOIN mybatis_user_table u ON u.id = rmu.uid		-- 继续左外联 加入user表 让u的id与rmu的uid关联
    </select>

    <!--user类左外连role-->
    <select id="findAllUserWithRole" resultMap="userWithRoleMapper">
         SELECT u.id,u.username,r.role_name,r.role_description FROM mybatis_user_table u 	-- 选择只显示R的ID R_N R_D和U的name
         LEFT OUTER JOIN mybatis_role_map_user rmu ON u.id = rmu.uid			-- 左外联 加入rmu 让 r的id与rmu的rid关联
         LEFT OUTER JOIN mybatis_role r ON r.id = rmu.rid				-- 继续左外联 加入user表 让u的id与rmu的uid关联
    </select>

    <!--测试查询role表-->
    <select id="findAllRole" resultMap="roleMapper">
        SELECT * FROM mybatis_role mr
    </select>
</mapper>
